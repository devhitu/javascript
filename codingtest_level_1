/*
LEVEL 1.

230329~
*/

/*평균 구하기*/
function averageMachine(arr) {
    return arr.reduce((sum, current) => sum + current) / arr.length;
}

//reduce 함수 예제
const array = [3,4,5,6,7,8,10];
array.reduce((a,b) => a+b) //배열.reduce((누적값, 현잿값, 인덱스, 요소) => { return 결과 }, 초깃값);

//자릿수 더하기
function digitsSum(digits) {
    /*
    toString : 문자열로 변환
    split : 문자열을 ('')로 구분자를 넣어서 쪼개 배열에 담기
    map : 새로운 배열로 생성
    reduce : 배열의 요소들을 연산해줌, 초기값 0 설정
    */
    return digits.toString.split('').map(item => +item).reduce((a,b)=>a+b,0) //배열.map((요소, 인덱스, 배열) => { return 요소 });
}

/*약수의 합*/
function measureSum(n) {
    var answer = 0;
    for ( let i = 1; i <= n; i++){
        if (n%i == 0){
            answer += i
        }      
    }
    return answer;
}

/*x만큼 간격이 있는 n개의 숫자 => 참고없이 내가 품^^*/
function arraySpacedbyX(x, n) {
    var answer = [];
    for(let i = 1; i <= n; i++){
        answer.push(x*i)
    }
    return answer; //x=2,n=5일때 [2,4,6,8,10] 출력
}
//제로초 풀이... 더 간지나는 방법이 있었다...
function arraySpacedbyX2(x, n) {
    /*
        Array(n) : n개의 빈 배열이 생김
        fill(x) : 빈배열 안에 값이 x로 채워짐
        map: i는 배열의 인덱스 수만큼 반복문을 돌림, v는 x값을 할당받음
    */
    return Array(n).fill(x).map((v, i) => (i + 1) * v) 
}


/*짝수와 홀수 => 참고없이 내가 품^^**/
function evenOrOdd(num) {
    if (num%2==0){
        return "Even"    
    }else{
        return "Odd"    
    }
}
//어느 천재의 풀이....
function evenOrOdd2(num) {
    return num % 2 ? "Odd" : "Even"
}

/* 문자열 내 p와 y의 개수 */
function stringCompare(s){
    let change = s.toUpperCase();    
    let check_p = change.split("P").length;
    let check_y = change.split("Y").length;
    
    return check_p == check_y ? true : false; //p,y가 하나도 없을때도 0개로 같으므로 true 
}

//어느 천재의 풀이....
function numPY(s){
    //함수를 완성하세요
      return s.toUpperCase().split("P").length === s.toUpperCase().split("Y").length;
  }
  

/*나머지가 1이 되는 수 찾기 => 참고없이 내가 품^^*/
function  reminderIs1(n) {
    for(let i = 1; i<n; i++){
        if (n%i == 1){
            return Math.min(i) 
        }     
    }
    return answer;
}


/*정수 제곱근 판별*/
function positiveRoot(n) {
    //Math.sqrt(3) % 1 = 0.732 출력 => 양의 정수가 아님
    let root = Math.sqrt(n)
    return root % 1 == 0 ? (root+1)**2 : -1;
}


/*자연수 뒤집어 배열로 만들기*/
function reverseArray(n) {
    return String(n).split('').reverse().map((data)=> Number(data))
}

/*정수 내림차순으로 배치하기*/
function descendingNumber(n) {
    //join으로 배열을 정수로 변환
    return +String(n).split('').map((data)=> Number(data)).sort().reverse().join("")
}

/*문자열을 정수로 바꾸기*/
function changeNumber(s) {
    return Number(s)
}

//어느 천재의 풀이....
function strToInt(str){
    //연산이 되면서 문자가 자동으로 정수로 파싱됨 
    return str/1
}

/*하샤드 수 ...chat gpt가 풀어줌..*/
//x가 12일때
function harshadNumber(x) {
  let sum = 0;
  let strNum = String(x); //12
  for (let i = 0; i < strNum.length; i++) { //strNum.length = 2
    //parseInt 문자열을 숫자로 1+2 => 3
    //charAt i번째 문자를 반환 1, 2 반환
    sum += parseInt(strNum.charAt(i));
  }
  return x % sum === 0; //12%3=0
}
//어느 천재의 풀이....
function Harshad(n){
    return !(n % (n + "").split("").reduce((a, b) => +b + +a ));
}

/*두 정수 사이의 합*/
function Gauss(a, b) {
    //가우스공식
    return (a+b) * (Math.abs(b-a)+1)/2;
}
//어느 천재의 풀이....
function adder(a, b, s = 0){
    for (var i = Math.min(a, b); i <= Math.max(a, b); i++) s += i;
    return s;
}

/*콜라츠 추측*/
function collatzConjecture(num) {
    let answer = 0;
    
    while(num != 1){
        if(num%2==0){   
            num = num/2
        }else{
            num = num*3+1
        }          
        answer += 1;
    }
    if(answer >= 500){
        return -1;
    }else{
        return answer;
    }
}

//어느 천재의 풀이....
function collatz(num) {
    var answer = 0;
    while(num !=1 && answer !=500){
        num%2==0 ? num = num/2 : num = num*3 +1;
    answer++;
  }
    return num == 1 ? answer : -1;
}

/*서울에서 김서방 찾기
    seoul이란 배열에는 Jane, Kim등등이 있는데 거기서 Kim의 위치를 찾는 문제*/
function whereIsKim(seoul) {
    var answer = seoul.indexOf('Kim');
    return `김서방은 ${answer}에 있다`
}

/*나누어 떨어지는 숫자 배열 ing.....*/
function solution(arr, divisor) {
    var answer = [];
    let arrLength = arr.length;
    for(let i=0; i <= arrLength; i++){
        if(arr[i] % divisor == 0){
            return answer.push(arr[i])
        }else if(divisor > arr[i]){
            return -1
        }        
    }
    //arr배열에서 하나씩 뽑아와서 나눠
    //나머지가 0이면 뽑아온값들을 푸쉬
}
function solution(arr, divisor) {
    var answer = [];
    for(i=0; i<arr.length; i++) {
      if(arr[i] % divisor == 0) {
        answer.push(arr[i]);
      }
    }
    if(answer.length == 0) {
      answer.push(-1);
    }
    /*
        array.sort() => 파라미터 값을 입력하지 않으면 '유니코드 순서'에 따라 정렬함, 즉 [1,10,2,3]이런식으로 정렬됨
        즉, 파라미터는 a - b이 양값이면 return 1, 음값이면 -1, 같으면 0을 출력함
        
        오름차순의 경우 (a,b) => a - b 으로 연산, 양값만 출력
    */
    answer.sort((a,b) => a - b);
    return answer;
}